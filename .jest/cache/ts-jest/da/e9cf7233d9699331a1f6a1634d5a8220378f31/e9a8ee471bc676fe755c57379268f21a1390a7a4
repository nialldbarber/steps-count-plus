[["/Users/niallbarber/Developer/steps-count-plus/src/lib/numbers.test.ts",{"fileContent":"import { formatNumber } from \"./numbers\";\n\ndescribe(\"lib -> numbers\", () => {\n  describe(\"formatNumber\", () => {\n    test(\"a number is converted to a string\", () => {\n      expect(formatNumber(2)).toBe(\"2\");\n    });\n\n    test(\"a number longer than 4 digits should be formatted\", () => {\n      expect(formatNumber(2000)).toBe(\"2,000\");\n      expect(formatNumber(10000)).toBe(\"10,000\");\n      expect(formatNumber(1234567)).toBe(\"1,234,567\");\n    });\n\n    test(\"should handle negative numbers\", () => {\n      expect(formatNumber(-1234567)).toBe(\"-1,234,567\");\n    });\n\n    test(\"should handle zero\", () => {\n      expect(formatNumber(0)).toBe(\"0\");\n    });\n\n    test(\"should handle floating point numbers (assuming US locale)\", () => {\n      expect(formatNumber(12345.6789)).toBe(\"12,345.679\");\n    });\n  });\n});\n","resolvedModuleNames":["/Users/niallbarber/Developer/steps-count-plus/src/lib/numbers.ts"]}],["/Users/niallbarber/Developer/steps-count-plus/src/screens/dashboard/dashboard.test.tsx",{"fileContent":"import React from \"react\";\nimport { render, screen } from \"@testing-library/react-native\";\nimport DashboardScreen from \"./dashboard\";\n\ndescribe(\"Screen -> Stats\", () => {\n  beforeEach(() => {\n    render(<DashboardScreen />);\n  });\n\n  test(\"test that it renders\", () => {\n    const filterText = screen.getByText(\"screen.stats.filterText\");\n    expect(filterText).toBeTruthy();\n  });\n});\n","resolvedModuleNames":["/Users/niallbarber/Developer/steps-count-plus/src/screens/dashboard/dashboard.tsx","/Users/niallbarber/Developer/steps-count-plus/src/design-system/components/atoms/box/index.ts","/Users/niallbarber/Developer/steps-count-plus/src/design-system/components/atoms/chip/index.ts","/Users/niallbarber/Developer/steps-count-plus/src/design-system/components/atoms/text/index.ts","/Users/niallbarber/Developer/steps-count-plus/src/design-system/components/layouts/main-screen/index.ts","/Users/niallbarber/Developer/steps-count-plus/src/design-system/components/layouts/row/index.ts","/Users/niallbarber/Developer/steps-count-plus/src/design-system/components/layouts/stack/index.ts","/Users/niallbarber/Developer/steps-count-plus/src/hooks/useActiveValue.ts","/Users/niallbarber/Developer/steps-count-plus/src/hooks/useHealthData.ts","/Users/niallbarber/Developer/steps-count-plus/src/lib/hitSlop.ts","/Users/niallbarber/Developer/steps-count-plus/src/screens/distance/daily.tsx","/Users/niallbarber/Developer/steps-count-plus/src/screens/distance/monthly.tsx","/Users/niallbarber/Developer/steps-count-plus/src/screens/distance/weekly.tsx","/Users/niallbarber/Developer/steps-count-plus/src/screens/distance/yearly.tsx","/Users/niallbarber/Developer/steps-count-plus/src/screens/steps/daily.tsx","/Users/niallbarber/Developer/steps-count-plus/src/screens/steps/monthly.tsx","/Users/niallbarber/Developer/steps-count-plus/src/screens/steps/weekly.tsx","/Users/niallbarber/Developer/steps-count-plus/src/screens/steps/yearly.tsx"]}],["/Users/niallbarber/Developer/steps-count-plus/src/screens/dashboard/dashboard.tsx",{"fileContent":"import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Box } from \"@/design-system/components/atoms/box\";\nimport { Chip } from \"@/design-system/components/atoms/chip\";\nimport { Text } from \"@/design-system/components/atoms/text\";\nimport { MainScreenLayout } from \"@/design-system/components/layouts/main-screen\";\nimport { Row } from \"@/design-system/components/layouts/row\";\nimport { Stack } from \"@/design-system/components/layouts/stack\";\nimport { useActiveValue } from \"@/hooks/useActiveValue\";\nimport { useHealthData } from \"@/hooks/useHealthData\";\nimport { hitSlopLarge } from \"@/lib/hitSlop\";\nimport { DailyDistance } from \"@/screens/distance/daily\";\nimport { MonthlyDistance } from \"@/screens/distance/monthly\";\nimport { WeeklyDistance } from \"@/screens/distance/weekly\";\nimport { YearlyDistance } from \"@/screens/distance/yearly\";\nimport { DailySteps } from \"@/screens/steps/daily\";\nimport { MonthlySteps } from \"@/screens/steps/monthly\";\nimport { WeeklySteps } from \"@/screens/steps/weekly\";\nimport { YearlySteps } from \"@/screens/steps/yearly\";\n\ntype FilterItems = \"OneYear\" | \"SevenDays\" | \"ThirtyDays\" | \"TwentyFourHours\";\nconst chipOptions: Array<{ id: number; label: string; view: FilterItems }> = [\n  { id: 1, label: \"24 hrs\", view: \"TwentyFourHours\" },\n  { id: 2, label: \"7 days\", view: \"SevenDays\" },\n  { id: 3, label: \"30 days\", view: \"ThirtyDays\" },\n  { id: 4, label: \"1 year\", view: \"OneYear\" },\n];\n\nexport default function DashboardScreen() {\n  useHealthData(new Date());\n  const { t } = useTranslation();\n  const { value, handleActiveValue } = useActiveValue();\n  // const { params } = useRoute();\n  const [currentFilter, setCurrentFilter] = useState<FilterItems | string>(\n    \"TwentyFourHours\",\n  );\n\n  return (\n    <>\n      <Box paddingLeft=\"24px\">\n        <Text size=\"14px\" color=\"black\">\n          {t(\"screen.stats.filterText\")}\n        </Text>\n      </Box>\n      <Box>\n        <Row\n          marginHorizontal=\"15px\"\n          marginTop=\"12px\"\n          marginBottom=\"10px\"\n          gutter=\"5px\"\n          a11yRole=\"tablist\"\n          scroll\n        >\n          {chipOptions.map(({ id, label, view }, index) => {\n            return (\n              <Chip\n                key={id}\n                label={label}\n                onPress={() => {\n                  handleActiveValue(index);\n                  setCurrentFilter(view);\n                }}\n                a11yLabel={t(\"screen.stats.tabs.a11yLabel\")}\n                a11yRole=\"menu\"\n                hitSlop={hitSlopLarge}\n                isSelected={index === value}\n                size=\"16px\"\n                height=\"36px\"\n              />\n            );\n          })}\n        </Row>\n      </Box>\n      <MainScreenLayout>\n        {currentFilter === \"TwentyFourHours\" && (\n          <>\n            <Box marginBottom=\"20px\" alignItems=\"center\">\n              <Text level=\"heading\" size=\"30px\">\n                Today\n              </Text>\n            </Box>\n            <Stack gutter=\"10px\">\n              <DailySteps />\n              <DailyDistance />\n            </Stack>\n          </>\n        )}\n        {currentFilter === \"SevenDays\" && (\n          <>\n            <Box marginBottom=\"20px\" alignItems=\"center\">\n              <Text level=\"heading\" size=\"30px\">\n                Last week\n              </Text>\n            </Box>\n            <Stack gutter=\"10px\">\n              <WeeklySteps />\n              <WeeklyDistance />\n            </Stack>\n          </>\n        )}\n        {currentFilter === \"ThirtyDays\" && (\n          <>\n            <Box marginBottom=\"20px\" alignItems=\"center\">\n              <Text level=\"heading\" size=\"30px\">\n                Last month\n              </Text>\n            </Box>\n            <Stack gutter=\"10px\">\n              <MonthlySteps />\n              <MonthlyDistance />\n            </Stack>\n          </>\n        )}\n        {currentFilter === \"OneYear\" && (\n          <>\n            <Box marginBottom=\"20px\" alignItems=\"center\">\n              <Text level=\"heading\" size=\"30px\">\n                Last year\n              </Text>\n            </Box>\n            <Stack gutter=\"10px\">\n              <YearlySteps />\n              <YearlyDistance />\n            </Stack>\n          </>\n        )}\n      </MainScreenLayout>\n    </>\n  );\n}\n","resolvedModuleNames":["/Users/niallbarber/Developer/steps-count-plus/src/design-system/components/atoms/box/index.ts","/Users/niallbarber/Developer/steps-count-plus/src/design-system/components/atoms/chip/index.ts","/Users/niallbarber/Developer/steps-count-plus/src/design-system/components/atoms/text/index.ts","/Users/niallbarber/Developer/steps-count-plus/src/design-system/components/layouts/main-screen/index.ts","/Users/niallbarber/Developer/steps-count-plus/src/design-system/components/layouts/row/index.ts","/Users/niallbarber/Developer/steps-count-plus/src/design-system/components/layouts/stack/index.ts","/Users/niallbarber/Developer/steps-count-plus/src/hooks/useActiveValue.ts","/Users/niallbarber/Developer/steps-count-plus/src/hooks/useHealthData.ts","/Users/niallbarber/Developer/steps-count-plus/src/lib/hitSlop.ts","/Users/niallbarber/Developer/steps-count-plus/src/screens/distance/daily.tsx","/Users/niallbarber/Developer/steps-count-plus/src/screens/distance/monthly.tsx","/Users/niallbarber/Developer/steps-count-plus/src/screens/distance/weekly.tsx","/Users/niallbarber/Developer/steps-count-plus/src/screens/distance/yearly.tsx","/Users/niallbarber/Developer/steps-count-plus/src/screens/steps/daily.tsx","/Users/niallbarber/Developer/steps-count-plus/src/screens/steps/monthly.tsx","/Users/niallbarber/Developer/steps-count-plus/src/screens/steps/weekly.tsx","/Users/niallbarber/Developer/steps-count-plus/src/screens/steps/yearly.tsx","/Users/niallbarber/Developer/steps-count-plus/src/design-system/components/atoms/box/box.tsx","/Users/niallbarber/Developer/steps-count-plus/src/design-system/components/atoms/chip/chip.tsx","/Users/niallbarber/Developer/steps-count-plus/src/design-system/components/atoms/text/text.tsx","/Users/niallbarber/Developer/steps-count-plus/src/design-system/components/layouts/main-screen/main-screen.tsx","/Users/niallbarber/Developer/steps-count-plus/src/design-system/components/layouts/row/row.tsx","/Users/niallbarber/Developer/steps-count-plus/src/design-system/components/layouts/stack/stack.tsx","/Users/niallbarber/Developer/steps-count-plus/src/lib/distance.ts","/Users/niallbarber/Developer/steps-count-plus/src/lib/numbers.ts","/Users/niallbarber/Developer/steps-count-plus/src/lib/steps.ts","/Users/niallbarber/Developer/steps-count-plus/src/lib/units.ts","/Users/niallbarber/Developer/steps-count-plus/src/stores/distance.ts","/Users/niallbarber/Developer/steps-count-plus/src/stores/steps.ts","/Users/niallbarber/Developer/steps-count-plus/src/design-system/layouts/space.ts","/Users/niallbarber/Developer/steps-count-plus/src/design-system/components/atoms/card/index.ts","/Users/niallbarber/Developer/steps-count-plus/src/hooks/useRemainingCount.ts","/Users/niallbarber/Developer/steps-count-plus/src/stores/goals.ts","/Users/niallbarber/Developer/steps-count-plus/src/stores/units.ts","/Users/niallbarber/Developer/steps-count-plus/src/components/chart/donut/index.ts","/Users/niallbarber/Developer/steps-count-plus/src/lib/goal.ts","/Users/niallbarber/Developer/steps-count-plus/src/components/chart/chart.tsx"]}],["/Users/niallbarber/Developer/steps-count-plus/src/lib/numbers.ts",{"fileContent":"/**\n * Example: // 3500 -> '3,500' if in US English locale\n * @param num\n * @returns string\n */\nexport const formatNumber = (num: number) => Intl.NumberFormat().format(num);\n\nexport const roundDown = (num: number) => Math.round(num);\n","resolvedModuleNames":[]}],["/Users/niallbarber/Developer/steps-count-plus/src/design-system/components/atoms/box/index.ts",{"fileContent":"export { default as Box } from \"./box\";\n","resolvedModuleNames":["/Users/niallbarber/Developer/steps-count-plus/src/design-system/components/atoms/box/box.tsx","/Users/niallbarber/Developer/steps-count-plus/src/design-system/color/palettes.ts","/Users/niallbarber/Developer/steps-count-plus/src/design-system/color/shadow.ts","/Users/niallbarber/Developer/steps-count-plus/src/design-system/layouts/radius.ts","/Users/niallbarber/Developer/steps-count-plus/src/design-system/layouts/radius.ts","/Users/niallbarber/Developer/steps-count-plus/src/design-system/layouts/size.ts","/Users/niallbarber/Developer/steps-count-plus/src/design-system/layouts/size.ts","/Users/niallbarber/Developer/steps-count-plus/src/design-system/layouts/space.ts","/Users/niallbarber/Developer/steps-count-plus/src/design-system/layouts/space.ts","/Users/niallbarber/Developer/steps-count-plus/src/design-system/layouts/zIndex.ts","/Users/niallbarber/Developer/steps-count-plus/src/design-system/layouts/zIndex.ts","/Users/niallbarber/Developer/steps-count-plus/src/types/a11y.d.ts"]}],["/Users/niallbarber/Developer/steps-count-plus/src/design-system/components/atoms/box/box.tsx",{"fileContent":"// @ts-nocheck\nimport type { PropsWithChildren } from \"react\";\nimport { useMemo } from \"react\";\nimport type { AccessibilityRole } from \"react-native\";\nimport { View } from \"react-native\";\nimport { colors, type Colors } from \"@/design-system/color/palettes\";\nimport { shadow as dropShadow } from \"@/design-system/color/shadow\";\nimport type { Radius } from \"@/design-system/layouts/radius\";\nimport { radius } from \"@/design-system/layouts/radius\";\nimport type { Height, Width } from \"@/design-system/layouts/size\";\nimport { heights, widths } from \"@/design-system/layouts/size\";\nimport type { Space } from \"@/design-system/layouts/space\";\nimport { space } from \"@/design-system/layouts/space\";\nimport type { NegativeZIndex, ZIndex } from \"@/design-system/layouts/zIndex\";\nimport { zIndex } from \"@/design-system/layouts/zIndex\";\nimport type { A11y } from \"@/types/a11y\";\n\nfunction resolveToken<TokenName extends string, TokenValue, CustomValue>(\n  scale: Record<TokenName, TokenValue>,\n  value: TokenName | { custom: CustomValue } | undefined,\n) {\n  return value\n    ? typeof value === \"object\"\n      ? value.custom\n      : scale[value]\n    : undefined;\n}\n\ntype BoxProps = {\n  a11yRole?: AccessibilityRole;\n  alignSelf?: \"flex-start\" | \"flex-end\" | \"center\" | \"stretch\";\n  alignItems?: \"flex-start\" | \"flex-end\" | \"center\" | \"stretch\";\n  borderWidth?: number;\n  borderStyle?: \"none\" | \"dotted\" | \"dashed\" | \"solid\";\n  borderColor?: Colors;\n  borderRadius?: Radius;\n  borderTopLeftRadius?: Radius;\n  borderTopRightRadius?: Radius;\n  borderBottomLeftRadius?: Radius;\n  borderBottomRightRadius?: Radius;\n  bottom?: Space;\n  flex?: number;\n  flexBasis?: 0;\n  flexDirection?: \"row\" | \"row-reverse\" | \"column\";\n  flexGrow?: 0 | 1;\n  flexShrink?: 0 | 1;\n  flexWrap?: \"wrap\";\n  left?: Space;\n  justifyContent?:\n    | \"flex-start\"\n    | \"flex-end\"\n    | \"center\"\n    | \"space-between\"\n    | \"space-around\";\n  margin?: Space;\n  marginBottom?: Space;\n  marginHorizontal?: Space;\n  marginLeft?: Space;\n  marginRight?: Space;\n  marginTop?: Space;\n  marginVertical?: Space;\n  padding?: Space;\n  paddingBottom?: Space;\n  paddingHorizontal?: Space;\n  paddingLeft?: Space;\n  paddingRight?: Space;\n  paddingTop?: Space;\n  paddingVertical?: Space;\n  position?: \"absolute\" | \"relative\";\n  right?: Space;\n  top?: Space;\n  height?: Height | Space;\n  width?: Width | Space;\n  overflow?: \"hidden\" | \"visible\" | \"scroll\";\n  backgroundColor?: Colors;\n  styles?: any;\n  shadow?: boolean;\n  zIndex?: ZIndex | NegativeZIndex;\n} & (\n  | {\n      borderBottomRadius?: number;\n      borderLeftRadius?: never;\n      borderRightRadius?: never;\n      borderTopRadius?: number;\n    }\n  | {\n      borderBottomRadius?: never;\n      borderLeftRadius?: number;\n      borderRightRadius?: number;\n      borderTopRadius?: never;\n    }\n) &\n  (\n    | {\n        background?: Colors;\n        //shadow?: never;\n      }\n    | {\n        background: Colors;\n        //shadow: Shadow;\n      }\n  ) &\n  Partial<A11y>;\n\nexport default function Box({\n  a11yRole,\n  a11yLabel,\n  a11yHint,\n  alignSelf,\n  alignItems,\n  borderStyle,\n  borderWidth,\n  borderColor,\n  borderRadius,\n  borderBottomRadius,\n  borderLeftRadius,\n  borderTopLeftRadius,\n  borderTopRightRadius,\n  borderBottomLeftRadius,\n  borderBottomRightRadius,\n  borderRightRadius,\n  borderTopRadius,\n  bottom,\n  flex,\n  flexBasis,\n  flexDirection,\n  flexGrow,\n  flexShrink,\n  flexWrap,\n  left,\n  justifyContent,\n  margin,\n  marginBottom,\n  marginHorizontal,\n  marginLeft,\n  marginRight,\n  marginTop,\n  marginVertical,\n  padding,\n  paddingBottom,\n  paddingHorizontal,\n  paddingLeft,\n  paddingRight,\n  paddingTop,\n  paddingVertical,\n  position,\n  right,\n  top,\n  styles: customStyles,\n  width: _width,\n  height: _height,\n  overflow,\n  backgroundColor,\n  zIndex: _zIndex,\n  shadow = false,\n  children,\n}: PropsWithChildren<BoxProps>) {\n  const width = resolveToken({ ...widths, ...space }, _width);\n  const height = resolveToken({ ...heights, ...space }, _height);\n\n  const styles = useMemo(() => {\n    return {\n      alignSelf,\n      alignItems,\n      borderWidth,\n      borderStyle,\n      borderColor: colors[borderColor],\n      borderBottomLeftRadius:\n        radius[borderBottomLeftRadius] ??\n        radius[borderBottomRadius] ??\n        radius[borderLeftRadius] ??\n        radius[borderRadius],\n      borderBottomRightRadius:\n        radius[borderBottomRightRadius] ??\n        radius[borderBottomRadius] ??\n        radius[borderRightRadius] ??\n        radius[borderRadius],\n      borderTopLeftRadius:\n        radius[borderTopLeftRadius] ??\n        radius[borderTopRadius] ??\n        radius[borderLeftRadius] ??\n        radius[borderRadius],\n      borderTopRightRadius:\n        radius[borderTopRightRadius] ??\n        radius[borderTopRadius] ??\n        radius[borderRightRadius] ??\n        radius[borderRadius],\n      flex,\n      flexBasis,\n      flexDirection,\n      flexGrow,\n      flexShrink,\n      flexWrap,\n      justifyContent,\n      margin: space[margin],\n      marginBottom: space[marginBottom],\n      marginHorizontal: space[marginHorizontal],\n      marginLeft: space[marginLeft],\n      marginRight: space[marginRight],\n      marginTop: space[marginTop],\n      marginVertical: space[marginVertical],\n      padding: space[padding],\n      paddingBottom: space[paddingBottom],\n      paddingHorizontal: space[paddingHorizontal],\n      paddingLeft: space[paddingLeft],\n      paddingRight: space[paddingRight],\n      paddingTop: space[paddingTop],\n      paddingVertical: space[paddingVertical],\n      position,\n      top: space[top],\n      right: space[right],\n      left: space[left],\n      bottom: space[bottom],\n      height,\n      width,\n      overflow,\n      backgroundColor: colors[backgroundColor],\n      zIndex: zIndex[_zIndex],\n    };\n  }, [\n    alignSelf,\n    flex,\n    alignItems,\n    borderWidth,\n    borderStyle,\n    borderColor,\n    borderBottomLeftRadius,\n    borderBottomRadius,\n    borderBottomRightRadius,\n    borderLeftRadius,\n    borderRadius,\n    borderRightRadius,\n    borderTopLeftRadius,\n    borderTopRadius,\n    borderTopRightRadius,\n    bottom,\n    flexBasis,\n    flexDirection,\n    flexGrow,\n    flexShrink,\n    flexWrap,\n    height,\n    justifyContent,\n    left,\n    margin,\n    marginBottom,\n    marginHorizontal,\n    marginLeft,\n    marginRight,\n    marginTop,\n    marginVertical,\n    padding,\n    paddingBottom,\n    paddingHorizontal,\n    paddingLeft,\n    paddingRight,\n    paddingTop,\n    paddingVertical,\n    position,\n    right,\n    top,\n    width,\n    overflow,\n    backgroundColor,\n    _zIndex,\n  ]);\n\n  return (\n    <View\n      style={[\n        styles,\n        customStyles,\n        shadow ? dropShadow({ elevation: 1, opacity: 0.15 }) : null,\n      ]}\n      accessibilityRole={a11yRole}\n      accessibilityLabel={a11yLabel}\n      accessibilityHint={a11yHint}\n    >\n      {children}\n    </View>\n  );\n}\n","resolvedModuleNames":["/Users/niallbarber/Developer/steps-count-plus/src/design-system/color/palettes.ts","/Users/niallbarber/Developer/steps-count-plus/src/design-system/color/shadow.ts","/Users/niallbarber/Developer/steps-count-plus/src/design-system/layouts/radius.ts","/Users/niallbarber/Developer/steps-count-plus/src/design-system/layouts/size.ts","/Users/niallbarber/Developer/steps-count-plus/src/design-system/layouts/space.ts","/Users/niallbarber/Developer/steps-count-plus/src/design-system/layouts/zIndex.ts","/Users/niallbarber/Developer/steps-count-plus/src/types/a11y.d.ts"]}],["/Users/niallbarber/Developer/steps-count-plus/src/design-system/color/palettes.ts",{"fileContent":"export const baseColors = {\n  black: \"#343434\",\n  white: \"#f5f5f5\",\n  pureWhite: \"#fff\",\n} as const;\n\nexport const greyColors = {\n  greyOne: \"#e5e7eb\",\n  greyTwo: \"#d1d5db\",\n  greyThree: \"#f7f7f7\",\n  greyFour: \"#717171\",\n  greyFive: \"#eef1ee\",\n  greySix: \"rgba(209, 213, 219, 0.09)\",\n} as const;\n\nexport const coreColors = {\n  primary: \"#00D632\",\n  primaryDark: \"#045fd1\",\n  secondary: \"#f5f5f5\",\n  tertiary: \"\",\n  destructive: \"#ef4444\",\n} as const;\n\nexport const tonalColors = {\n  orange: \"#e2572b\",\n  orange_light: \"#fae5e1\",\n} as const;\n\nexport type BaseColors = keyof typeof baseColors;\nexport type GreyColors = keyof typeof greyColors;\nexport type CoreColors = keyof typeof coreColors;\nexport type TonalColors = keyof typeof tonalColors;\n\nexport type Colors = BaseColors | GreyColors | CoreColors | TonalColors;\n\nexport const colors = {\n  ...baseColors,\n  ...coreColors,\n  ...greyColors,\n  ...tonalColors,\n};\n\n// yellow: #ffe66b\n// black: #222222\n","resolvedModuleNames":[]}],["/Users/niallbarber/Developer/steps-count-plus/src/design-system/color/shadow.ts",{"fileContent":"import { colors } from \"@/design-system/color/palettes\";\n\nexport const shadow = ({\n  width = 0,\n  height = 1,\n  opacity = 0.07,\n  radius = 2.22,\n  elevation = 2,\n}: {\n  width?: number;\n  height?: number;\n  opacity?: number;\n  radius?: number;\n  elevation?: number;\n} = {}) => ({\n  shadowColor: colors.black,\n  shadowOffset: {\n    width,\n    height,\n  },\n  shadowOpacity: opacity,\n  shadowRadius: radius,\n  elevation,\n});\n","resolvedModuleNames":["/Users/niallbarber/Developer/steps-count-plus/src/design-system/color/palettes.ts"]}],["/Users/niallbarber/Developer/steps-count-plus/src/design-system/layouts/radius.ts",{"fileContent":"export const radius = {\n  none: 0,\n  small: 4,\n  medium: 8,\n  large: 12,\n  full: 100,\n} as const;\n\nexport type Radius = keyof typeof radius;\n","resolvedModuleNames":[]}],["/Users/niallbarber/Developer/steps-count-plus/src/design-system/layouts/size.ts",{"fileContent":"const fraction = (numerator: number, denominator: number) =>\n  `${(numerator * 100) / denominator}%`;\n\nexport const widths = {\n  \"1/2\": fraction(1, 2),\n  \"1/3\": fraction(1, 3),\n  \"1/4\": fraction(1, 4),\n  \"1/5\": fraction(1, 5),\n  \"2/3\": fraction(2, 3),\n  \"2/5\": fraction(2, 5),\n  \"3/4\": fraction(3, 4),\n  \"3/5\": fraction(3, 5),\n  \"4/5\": fraction(4, 5),\n  full: \"100%\",\n} as const;\n\nexport const heights = {\n  \"1/2\": fraction(1, 2),\n  \"1/3\": fraction(1, 3),\n  \"1/4\": fraction(1, 4),\n  \"1/5\": fraction(1, 5),\n  \"104px\": 104,\n  \"126px\": 126,\n  \"2/3\": fraction(2, 3),\n  \"2/5\": fraction(2, 5),\n  \"3/4\": fraction(3, 4),\n  \"3/5\": fraction(3, 5),\n  \"30px\": 30,\n  \"36px\": 36,\n  \"4/5\": fraction(4, 5),\n  \"40px\": 40,\n  \"46px\": 46,\n  \"56px\": 56,\n  \"64px\": 64,\n  \"68px\": 68,\n  \"90px\": 90,\n  full: \"100%\",\n} as const;\n\nexport type Width = keyof typeof widths;\nexport type Height = keyof typeof heights;\n","resolvedModuleNames":[]}],["/Users/niallbarber/Developer/steps-count-plus/src/design-system/layouts/space.ts",{"fileContent":"export const space = {\n  \"0px\": 0,\n  \"1px\": 1,\n  \"2px\": 2,\n  \"3px\": 3,\n  \"4px\": 4,\n  \"5px\": 5,\n  \"6px\": 6,\n  \"8px\": 8,\n  \"10px\": 10,\n  \"12px\": 12,\n  \"15px\": 15,\n  \"16px\": 16,\n  \"19px\": 19,\n  \"20px\": 20,\n  \"24px\": 24,\n  \"28px\": 28,\n  \"30px\": 30,\n  \"32px\": 32,\n  \"34px\": 34,\n  \"36px\": 36,\n  \"38px\": 38,\n  \"42px\": 42,\n  \"44px\": 44,\n  \"52px\": 52,\n  \"60px\": 60,\n  \"72px\": 72,\n  \"80px\": 80,\n  \"90px\": 90,\n  \"104px\": 104,\n  \"115px\": 115,\n  \"120px\": 120,\n  \"125px\": 125,\n  \"130px\": 130,\n} as const;\n\nexport const negativeSpace = {\n  \"-1px\": -1,\n  \"-2px\": -2,\n  \"-3px\": -3,\n  \"-4px\": -4,\n  \"-5px\": -5,\n  \"-6px\": -6,\n  \"-8px\": -8,\n  \"-10px\": -10,\n  \"-12px\": -12,\n  \"-15px\": -15,\n  \"-16px\": -16,\n  \"-19px\": -19,\n  \"-20px\": -20,\n  \"-24px\": -24,\n  \"-28px\": -28,\n  \"-30px\": -30,\n  \"-32px\": -32,\n  \"-34px\": -34,\n  \"-36px\": -36,\n  \"-38px\": -38,\n  \"-42px\": -42,\n  \"-44px\": -44,\n  \"-52px\": -52,\n  \"-60px\": -60,\n  \"-72px\": -72,\n  \"-80px\": -80,\n  \"-90px\": -90,\n  \"-115px\": -115,\n  \"-120px\": -120,\n  \"-125px\": -125,\n  \"-130px\": -130,\n} as const;\n\nexport type Space = keyof typeof space;\nexport type NegativeSpace = keyof typeof negativeSpace;\n","resolvedModuleNames":[]}],["/Users/niallbarber/Developer/steps-count-plus/src/design-system/layouts/zIndex.ts",{"fileContent":"export const zIndex = {\n  \"0px\": 0,\n  \"1px\": 1,\n  \"2px\": 2,\n  \"3px\": 3,\n  \"4px\": 4,\n  \"5px\": 5,\n  \"6px\": 6,\n  \"7px\": 7,\n  \"8px\": 8,\n  \"9px\": 9,\n  \"10px\": 10,\n  \"999px\": 999,\n} as const;\n\nexport const negativeZIndex = {\n  \"-1px\": -1,\n  \"-2px\": -2,\n  \"-3px\": -3,\n  \"-4px\": -4,\n  \"-5px\": -5,\n  \"-6px\": -6,\n  \"-7px\": -7,\n  \"-8px\": -8,\n  \"-9px\": -9,\n  \"-10px\": -10,\n  \"-999px\": -999,\n} as const;\n\nexport type ZIndex = keyof typeof zIndex;\nexport type NegativeZIndex = keyof typeof negativeZIndex;\n","resolvedModuleNames":[]}],["/Users/niallbarber/Developer/steps-count-plus/src/design-system/components/atoms/chip/index.ts",{"fileContent":"export { default as Chip } from \"./chip\";\n","resolvedModuleNames":["/Users/niallbarber/Developer/steps-count-plus/src/design-system/components/atoms/chip/chip.tsx","/Users/niallbarber/Developer/steps-count-plus/src/design-system/color/palettes.ts","/Users/niallbarber/Developer/steps-count-plus/src/design-system/color/shadow.ts","/Users/niallbarber/Developer/steps-count-plus/src/design-system/components/atoms/text/index.ts","/Users/niallbarber/Developer/steps-count-plus/src/design-system/components/common/pressable/index.ts","/Users/niallbarber/Developer/steps-count-plus/src/design-system/components/common/pressable/pressable.tsx","/Users/niallbarber/Developer/steps-count-plus/src/design-system/layouts/radius.ts","/Users/niallbarber/Developer/steps-count-plus/src/design-system/layouts/size.ts","/Users/niallbarber/Developer/steps-count-plus/src/design-system/layouts/size.ts","/Users/niallbarber/Developer/steps-count-plus/src/design-system/layouts/space.ts","/Users/niallbarber/Developer/steps-count-plus/src/design-system/theme/design-tokens.ts","/Users/niallbarber/Developer/steps-count-plus/src/design-system/typography/font-size.ts","/Users/niallbarber/Developer/steps-count-plus/src/hooks/useButtonAnimation.ts"]}],["/Users/niallbarber/Developer/steps-count-plus/src/design-system/components/atoms/chip/chip.tsx",{"fileContent":"// @ts-nocheck\nimport type { ViewStyle } from \"react-native\";\nimport { StyleSheet } from \"react-native\";\nimport * as Haptics from \"expo-haptics\";\nimport { colors } from \"@/design-system/color/palettes\";\nimport { shadow } from \"@/design-system/color/shadow\";\nimport { Text } from \"@/design-system/components/atoms/text\";\nimport { Pressable } from \"@/design-system/components/common/pressable\";\nimport type { PressableProps } from \"@/design-system/components/common/pressable/pressable\";\nimport { radius } from \"@/design-system/layouts/radius\";\nimport type { Height, Width } from \"@/design-system/layouts/size\";\nimport { heights, widths } from \"@/design-system/layouts/size\";\nimport { space } from \"@/design-system/layouts/space\";\nimport { tokens } from \"@/design-system/theme/design-tokens\";\nimport type { FontSizes } from \"@/design-system/typography/font-size\";\nimport { useButtonAnimation } from \"@/hooks/useButtonAnimation\";\n\ntype ChipMode = \"light\" | \"dark\";\ninterface ChipProps extends PressableProps {\n  mode?: ChipMode;\n  height?: Height;\n  size?: FontSizes;\n  a11yLabel: string;\n  label: string;\n  isSelected?: boolean;\n  width?: Width;\n  onPress?: (...args: any[]) => void;\n}\n\nexport default function Chip({\n  mode = \"light\",\n  isSelected = false,\n  height,\n  size,\n  label,\n  width,\n  onPress,\n  ...rest\n}: ChipProps) {\n  const { onPress: onPressHook, animatedStyle } = useButtonAnimation();\n\n  const backgroundStyles: Record<ChipMode, ViewStyle> = {\n    light: {\n      backgroundColor: isSelected\n        ? tokens.chipActiveBackgroundColor\n        : tokens.chipInactiveBackgroundColor,\n    },\n    dark: {\n      backgroundColor: isSelected\n        ? tokens.chipDarkActiveBackgroundColor\n        : tokens.chipDarkInactiveBackgroundColor,\n    },\n  };\n\n  const styles = StyleSheet.create({\n    container: {\n      height: heights[height] ?? space[\"38px\"],\n      paddingHorizontal: space[\"15px\"],\n      borderRadius: radius.full,\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      ...backgroundStyles[mode],\n      ...shadow(),\n      width: widths[width],\n    },\n    text: {\n      color: isSelected ? \"white\" : colors.black,\n    },\n  });\n\n  function handleOnPress() {\n    onPress && onPress();\n    onPressHook(\"in\");\n    Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Light);\n  }\n\n  return (\n    <Pressable style={styles.container} onPress={handleOnPress} {...rest}>\n      <Text style={styles.text} weight=\"bold\" size={size}>\n        {label}\n      </Text>\n    </Pressable>\n  );\n}\n","resolvedModuleNames":["/Users/niallbarber/Developer/steps-count-plus/src/design-system/color/palettes.ts","/Users/niallbarber/Developer/steps-count-plus/src/design-system/color/shadow.ts","/Users/niallbarber/Developer/steps-count-plus/src/design-system/components/atoms/text/index.ts","/Users/niallbarber/Developer/steps-count-plus/src/design-system/components/common/pressable/index.ts","/Users/niallbarber/Developer/steps-count-plus/src/design-system/components/common/pressable/pressable.tsx","/Users/niallbarber/Developer/steps-count-plus/src/design-system/layouts/radius.ts","/Users/niallbarber/Developer/steps-count-plus/src/design-system/layouts/size.ts","/Users/niallbarber/Developer/steps-count-plus/src/design-system/layouts/space.ts","/Users/niallbarber/Developer/steps-count-plus/src/design-system/theme/design-tokens.ts","/Users/niallbarber/Developer/steps-count-plus/src/design-system/typography/font-size.ts","/Users/niallbarber/Developer/steps-count-plus/src/hooks/useButtonAnimation.ts","/Users/niallbarber/Developer/steps-count-plus/src/design-system/components/atoms/text/text.tsx","/Users/niallbarber/Developer/steps-count-plus/src/types/a11y.d.ts"]}]]