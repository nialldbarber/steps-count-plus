027451086cb51c35f64ba619d6b4eb06
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "ImpactFeedbackStyle", {
  enumerable: true,
  get: function get() {
    return _Haptics.ImpactFeedbackStyle;
  }
});
Object.defineProperty(exports, "NotificationFeedbackType", {
  enumerable: true,
  get: function get() {
    return _Haptics.NotificationFeedbackType;
  }
});
exports.impactAsync = impactAsync;
exports.notificationAsync = notificationAsync;
exports.selectionAsync = selectionAsync;
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _expoModulesCore = require("expo-modules-core");
var _ExpoHaptics = _interopRequireDefault(require("./ExpoHaptics"));
var _Haptics = require("./Haptics.types");
function notificationAsync() {
  return _notificationAsync.apply(this, arguments);
}
function _notificationAsync() {
  _notificationAsync = (0, _asyncToGenerator2.default)(function* () {
    var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _Haptics.NotificationFeedbackType.Success;
    if (!_ExpoHaptics.default.notificationAsync) {
      throw new _expoModulesCore.UnavailabilityError('Haptics', 'notificationAsync');
    }
    yield _ExpoHaptics.default.notificationAsync(type);
  });
  return _notificationAsync.apply(this, arguments);
}
function impactAsync() {
  return _impactAsync.apply(this, arguments);
}
function _impactAsync() {
  _impactAsync = (0, _asyncToGenerator2.default)(function* () {
    var style = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _Haptics.ImpactFeedbackStyle.Medium;
    if (!_ExpoHaptics.default.impactAsync) {
      throw new _expoModulesCore.UnavailabilityError('Haptic', 'impactAsync');
    }
    yield _ExpoHaptics.default.impactAsync(style);
  });
  return _impactAsync.apply(this, arguments);
}
function selectionAsync() {
  return _selectionAsync.apply(this, arguments);
}
function _selectionAsync() {
  _selectionAsync = (0, _asyncToGenerator2.default)(function* () {
    if (!_ExpoHaptics.default.selectionAsync) {
      throw new _expoModulesCore.UnavailabilityError('Haptic', 'selectionAsync');
    }
    yield _ExpoHaptics.default.selectionAsync();
  });
  return _selectionAsync.apply(this, arguments);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZXhwb01vZHVsZXNDb3JlIiwicmVxdWlyZSIsIl9FeHBvSGFwdGljcyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfSGFwdGljcyIsIm5vdGlmaWNhdGlvbkFzeW5jIiwiX25vdGlmaWNhdGlvbkFzeW5jIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJfYXN5bmNUb0dlbmVyYXRvcjIiLCJkZWZhdWx0IiwidHlwZSIsImxlbmd0aCIsInVuZGVmaW5lZCIsIk5vdGlmaWNhdGlvbkZlZWRiYWNrVHlwZSIsIlN1Y2Nlc3MiLCJFeHBvSGFwdGljcyIsIlVuYXZhaWxhYmlsaXR5RXJyb3IiLCJpbXBhY3RBc3luYyIsIl9pbXBhY3RBc3luYyIsInN0eWxlIiwiSW1wYWN0RmVlZGJhY2tTdHlsZSIsIk1lZGl1bSIsInNlbGVjdGlvbkFzeW5jIiwiX3NlbGVjdGlvbkFzeW5jIl0sInNvdXJjZXMiOlsiLi4vc3JjL0hhcHRpY3MudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVW5hdmFpbGFiaWxpdHlFcnJvciB9IGZyb20gJ2V4cG8tbW9kdWxlcy1jb3JlJztcblxuaW1wb3J0IEV4cG9IYXB0aWNzIGZyb20gJy4vRXhwb0hhcHRpY3MnO1xuaW1wb3J0IHsgTm90aWZpY2F0aW9uRmVlZGJhY2tUeXBlLCBJbXBhY3RGZWVkYmFja1N0eWxlIH0gZnJvbSAnLi9IYXB0aWNzLnR5cGVzJztcblxuLy8gQG5lZWRzQXVkaXRcbi8qKlxuICogVGhlIGtpbmQgb2Ygbm90aWZpY2F0aW9uIHJlc3BvbnNlIHVzZWQgaW4gdGhlIGZlZWRiYWNrLlxuICogQHBhcmFtIHR5cGUgQSBub3RpZmljYXRpb24gZmVlZGJhY2sgdHlwZSB0aGF0IG9uIGlPUyBpcyBkaXJlY3RseSBtYXBwZWQgdG8gW1VJTm90aWZpY2F0aW9uRmVlZGJhY2tUeXBlXShodHRwczovL2RldmVsb3Blci5hcHBsZS5jb20vZG9jdW1lbnRhdGlvbi91aWtpdC91aW5vdGlmaWNhdGlvbmZlZWRiYWNrdHlwZSksXG4gKiB3aGlsZSBvbiBBbmRyb2lkIHRoZXNlIGFyZSBzaW11bGF0ZWQgdXNpbmcgW1ZpYnJhdG9yXShodHRwczovL2RldmVsb3Blci5hbmRyb2lkLmNvbS9yZWZlcmVuY2UvYW5kcm9pZC9vcy9WaWJyYXRvcikuXG4gKiBZb3UgY2FuIHVzZSBvbmUgb2YgYEhhcHRpY3MuTm90aWZpY2F0aW9uRmVlZGJhY2tUeXBlLntTdWNjZXNzLCBXYXJuaW5nLCBFcnJvcn1gLlxuICogQHJldHVybiBBIGBQcm9taXNlYCB3aGljaCBmdWxmaWxzIG9uY2UgbmF0aXZlIHNpemUgaGFwdGljcyBmdW5jdGlvbmFsaXR5IGlzIHRyaWdnZXJlZC5cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG5vdGlmaWNhdGlvbkFzeW5jKFxuICB0eXBlOiBOb3RpZmljYXRpb25GZWVkYmFja1R5cGUgPSBOb3RpZmljYXRpb25GZWVkYmFja1R5cGUuU3VjY2Vzc1xuKTogUHJvbWlzZTx2b2lkPiB7XG4gIGlmICghRXhwb0hhcHRpY3Mubm90aWZpY2F0aW9uQXN5bmMpIHtcbiAgICB0aHJvdyBuZXcgVW5hdmFpbGFiaWxpdHlFcnJvcignSGFwdGljcycsICdub3RpZmljYXRpb25Bc3luYycpO1xuICB9XG4gIGF3YWl0IEV4cG9IYXB0aWNzLm5vdGlmaWNhdGlvbkFzeW5jKHR5cGUpO1xufVxuXG4vLyBAbmVlZHNBdWRpdFxuLyoqXG4gKiBAcGFyYW0gc3R5bGUgQSBjb2xsaXNpb24gaW5kaWNhdG9yIHRoYXQgb24gaU9TIGlzIGRpcmVjdGx5IG1hcHBlZCB0byBbYFVJSW1wYWN0RmVlZGJhY2tTdHlsZWBdKGh0dHBzOi8vZGV2ZWxvcGVyLmFwcGxlLmNvbS9kb2N1bWVudGF0aW9uL3Vpa2l0L3VpaW1wYWN0ZmVlZGJhY2tzdHlsZSksXG4gKiB3aGlsZSBvbiBBbmRyb2lkIHRoZXNlIGFyZSBzaW11bGF0ZWQgdXNpbmcgW1ZpYnJhdG9yXShodHRwczovL2RldmVsb3Blci5hbmRyb2lkLmNvbS9yZWZlcmVuY2UvYW5kcm9pZC9vcy9WaWJyYXRvcikuXG4gKiBZb3UgY2FuIHVzZSBvbmUgb2YgYEhhcHRpY3MuSW1wYWN0RmVlZGJhY2tTdHlsZS57TGlnaHQsIE1lZGl1bSwgSGVhdnl9YC5cbiAqIEByZXR1cm4gQSBgUHJvbWlzZWAgd2hpY2ggZnVsZmlscyBvbmNlIG5hdGl2ZSBzaXplIGhhcHRpY3MgZnVuY3Rpb25hbGl0eSBpcyB0cmlnZ2VyZWQuXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBpbXBhY3RBc3luYyhcbiAgc3R5bGU6IEltcGFjdEZlZWRiYWNrU3R5bGUgPSBJbXBhY3RGZWVkYmFja1N0eWxlLk1lZGl1bVxuKTogUHJvbWlzZTx2b2lkPiB7XG4gIGlmICghRXhwb0hhcHRpY3MuaW1wYWN0QXN5bmMpIHtcbiAgICB0aHJvdyBuZXcgVW5hdmFpbGFiaWxpdHlFcnJvcignSGFwdGljJywgJ2ltcGFjdEFzeW5jJyk7XG4gIH1cbiAgYXdhaXQgRXhwb0hhcHRpY3MuaW1wYWN0QXN5bmMoc3R5bGUpO1xufVxuXG4vLyBAbmVlZHNBdWRpdFxuLyoqXG4gKiBVc2VkIHRvIGxldCBhIHVzZXIga25vdyB3aGVuIGEgc2VsZWN0aW9uIGNoYW5nZSBoYXMgYmVlbiByZWdpc3RlcmVkLlxuICogQHJldHVybiBBIGBQcm9taXNlYCB3aGljaCBmdWxmaWxzIG9uY2UgbmF0aXZlIHNpemUgaGFwdGljcyBmdW5jdGlvbmFsaXR5IGlzIHRyaWdnZXJlZC5cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHNlbGVjdGlvbkFzeW5jKCk6IFByb21pc2U8dm9pZD4ge1xuICBpZiAoIUV4cG9IYXB0aWNzLnNlbGVjdGlvbkFzeW5jKSB7XG4gICAgdGhyb3cgbmV3IFVuYXZhaWxhYmlsaXR5RXJyb3IoJ0hhcHRpYycsICdzZWxlY3Rpb25Bc3luYycpO1xuICB9XG4gIGF3YWl0IEV4cG9IYXB0aWNzLnNlbGVjdGlvbkFzeW5jKCk7XG59XG5cbmV4cG9ydCB7IE5vdGlmaWNhdGlvbkZlZWRiYWNrVHlwZSwgSW1wYWN0RmVlZGJhY2tTdHlsZSB9O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUFBLGdCQUFBLEdBQUFDLE9BQUE7QUFFQSxJQUFBQyxZQUFBLEdBQUFDLHNCQUFBLENBQUFGLE9BQUE7QUFDQSxJQUFBRyxRQUFBLEdBQUFILE9BQUE7QUFBZ0YsU0FVMURJLGlCQUFpQkEsQ0FBQTtFQUFBLE9BQUFDLGtCQUFBLENBQUFDLEtBQUEsT0FBQUMsU0FBQTtBQUFBO0FBQUEsU0FBQUYsbUJBQUE7RUFBQUEsa0JBQUEsT0FBQUcsa0JBQUEsQ0FBQUMsT0FBQSxFQUFoQyxhQUM0RDtJQUFBLElBQWpFQyxJQUFBLEdBQUFILFNBQUEsQ0FBQUksTUFBQSxRQUFBSixTQUFBLFFBQUFLLFNBQUEsR0FBQUwsU0FBQSxNQUFpQ00saUNBQXdCLENBQUNDLE9BQU87SUFFakUsSUFBSSxDQUFDQyxvQkFBVyxDQUFDWCxpQkFBaUIsRUFBRTtNQUNsQyxNQUFNLElBQUlZLG9DQUFtQixDQUFDLFNBQVMsRUFBRSxtQkFBbUIsQ0FBQzs7SUFFL0QsTUFBTUQsb0JBQVcsQ0FBQ1gsaUJBQWlCLENBQUNNLElBQUksQ0FBQztFQUMzQyxDQUFDO0VBQUEsT0FBQUwsa0JBQUEsQ0FBQUMsS0FBQSxPQUFBQyxTQUFBO0FBQUE7QUFBQSxTQVNxQlUsV0FBV0EsQ0FBQTtFQUFBLE9BQUFDLFlBQUEsQ0FBQVosS0FBQSxPQUFBQyxTQUFBO0FBQUE7QUFBQSxTQUFBVyxhQUFBO0VBQUFBLFlBQUEsT0FBQVYsa0JBQUEsQ0FBQUMsT0FBQSxFQUExQixhQUNrRDtJQUFBLElBQXZEVSxLQUFBLEdBQUFaLFNBQUEsQ0FBQUksTUFBQSxRQUFBSixTQUFBLFFBQUFLLFNBQUEsR0FBQUwsU0FBQSxNQUE2QmEsNEJBQW1CLENBQUNDLE1BQU07SUFFdkQsSUFBSSxDQUFDTixvQkFBVyxDQUFDRSxXQUFXLEVBQUU7TUFDNUIsTUFBTSxJQUFJRCxvQ0FBbUIsQ0FBQyxRQUFRLEVBQUUsYUFBYSxDQUFDOztJQUV4RCxNQUFNRCxvQkFBVyxDQUFDRSxXQUFXLENBQUNFLEtBQUssQ0FBQztFQUN0QyxDQUFDO0VBQUEsT0FBQUQsWUFBQSxDQUFBWixLQUFBLE9BQUFDLFNBQUE7QUFBQTtBQUFBLFNBT3FCZSxjQUFjQSxDQUFBO0VBQUEsT0FBQUMsZUFBQSxDQUFBakIsS0FBQSxPQUFBQyxTQUFBO0FBQUE7QUFBQSxTQUFBZ0IsZ0JBQUE7RUFBQUEsZUFBQSxPQUFBZixrQkFBQSxDQUFBQyxPQUFBLEVBQTdCLGFBQTZCO0lBQ2xDLElBQUksQ0FBQ00sb0JBQVcsQ0FBQ08sY0FBYyxFQUFFO01BQy9CLE1BQU0sSUFBSU4sb0NBQW1CLENBQUMsUUFBUSxFQUFFLGdCQUFnQixDQUFDOztJQUUzRCxNQUFNRCxvQkFBVyxDQUFDTyxjQUFjLEVBQUU7RUFDcEMsQ0FBQztFQUFBLE9BQUFDLGVBQUEsQ0FBQWpCLEtBQUEsT0FBQUMsU0FBQTtBQUFBIn0=