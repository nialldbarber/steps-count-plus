260f59c0ad66f9b356b536f61317e73e
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = require("react");
const react_native_1 = require("react-native");
const palettes_1 = require("@/design-system/color/palettes");
const shadow_1 = require("@/design-system/color/shadow");
const radius_1 = require("@/design-system/layouts/radius");
const size_1 = require("@/design-system/layouts/size");
const space_1 = require("@/design-system/layouts/space");
const zIndex_1 = require("@/design-system/layouts/zIndex");
function resolveToken(scale, value) {
    return value
        ? typeof value === "object"
            ? value.custom
            : scale[value]
        : undefined;
}
function Box({ a11yRole, a11yLabel, a11yHint, alignSelf, alignItems, borderStyle, borderWidth, borderColor, borderRadius, borderBottomRadius, borderLeftRadius, borderTopLeftRadius, borderTopRightRadius, borderBottomLeftRadius, borderBottomRightRadius, borderRightRadius, borderTopRadius, bottom, flex, flexBasis, flexDirection, flexGrow, flexShrink, flexWrap, left, justifyContent, margin, marginBottom, marginHorizontal, marginLeft, marginRight, marginTop, marginVertical, padding, paddingBottom, paddingHorizontal, paddingLeft, paddingRight, paddingTop, paddingVertical, position, right, top, styles: customStyles, width: _width, height: _height, overflow, backgroundColor, zIndex: _zIndex, shadow = false, children, }) {
    const width = resolveToken({ ...size_1.widths, ...space_1.space }, _width);
    const height = resolveToken({ ...size_1.heights, ...space_1.space }, _height);
    const styles = (0, react_1.useMemo)(() => {
        return {
            alignSelf,
            alignItems,
            borderWidth,
            borderStyle,
            borderColor: palettes_1.colors[borderColor],
            borderBottomLeftRadius: radius_1.radius[borderBottomLeftRadius] ??
                radius_1.radius[borderBottomRadius] ??
                radius_1.radius[borderLeftRadius] ??
                radius_1.radius[borderRadius],
            borderBottomRightRadius: radius_1.radius[borderBottomRightRadius] ??
                radius_1.radius[borderBottomRadius] ??
                radius_1.radius[borderRightRadius] ??
                radius_1.radius[borderRadius],
            borderTopLeftRadius: radius_1.radius[borderTopLeftRadius] ??
                radius_1.radius[borderTopRadius] ??
                radius_1.radius[borderLeftRadius] ??
                radius_1.radius[borderRadius],
            borderTopRightRadius: radius_1.radius[borderTopRightRadius] ??
                radius_1.radius[borderTopRadius] ??
                radius_1.radius[borderRightRadius] ??
                radius_1.radius[borderRadius],
            flex,
            flexBasis,
            flexDirection,
            flexGrow,
            flexShrink,
            flexWrap,
            justifyContent,
            margin: space_1.space[margin],
            marginBottom: space_1.space[marginBottom],
            marginHorizontal: space_1.space[marginHorizontal],
            marginLeft: space_1.space[marginLeft],
            marginRight: space_1.space[marginRight],
            marginTop: space_1.space[marginTop],
            marginVertical: space_1.space[marginVertical],
            padding: space_1.space[padding],
            paddingBottom: space_1.space[paddingBottom],
            paddingHorizontal: space_1.space[paddingHorizontal],
            paddingLeft: space_1.space[paddingLeft],
            paddingRight: space_1.space[paddingRight],
            paddingTop: space_1.space[paddingTop],
            paddingVertical: space_1.space[paddingVertical],
            position,
            top: space_1.space[top],
            right: space_1.space[right],
            left: space_1.space[left],
            bottom: space_1.space[bottom],
            height,
            width,
            overflow,
            backgroundColor: palettes_1.colors[backgroundColor],
            zIndex: zIndex_1.zIndex[_zIndex],
        };
    }, [
        alignSelf,
        flex,
        alignItems,
        borderWidth,
        borderStyle,
        borderColor,
        borderBottomLeftRadius,
        borderBottomRadius,
        borderBottomRightRadius,
        borderLeftRadius,
        borderRadius,
        borderRightRadius,
        borderTopLeftRadius,
        borderTopRadius,
        borderTopRightRadius,
        bottom,
        flexBasis,
        flexDirection,
        flexGrow,
        flexShrink,
        flexWrap,
        height,
        justifyContent,
        left,
        margin,
        marginBottom,
        marginHorizontal,
        marginLeft,
        marginRight,
        marginTop,
        marginVertical,
        padding,
        paddingBottom,
        paddingHorizontal,
        paddingLeft,
        paddingRight,
        paddingTop,
        paddingVertical,
        position,
        right,
        top,
        width,
        overflow,
        backgroundColor,
        _zIndex,
    ]);
    return (React.createElement(react_native_1.View, { style: [
            styles,
            customStyles,
            shadow ? (0, shadow_1.shadow)({ elevation: 1, opacity: 0.15 }) : null,
        ], accessibilityRole: a11yRole, accessibilityLabel: a11yLabel, accessibilityHint: a11yHint }, children));
}
exports.default = Box;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,